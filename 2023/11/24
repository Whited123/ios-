2023 / 11 / 24

오늘 배운 것:

1. 코드 테스트 
    1.1 숫자 짝꿍
        1.1.1 코드
            import Foundation

func solution(_ X:String, _ Y:String) -> String {
    var varY = Y
    var result = ""
    for i in X {
        if varY.contains(i) {
            result.append(i)
            if let jwoongBok = varY.firstIndex(of: i) {
                varY.remove(at: jwoongBok)
            }
        }
    }
    if result.isEmpty {
        return "-1"
    }
    var resultSet = result.sorted().reversed()
    if resultSet.first == "0" {
        return "0"
    }
    return String(resultSet)
}

        1.1.2 문제 리뷰
            입력값 문자열 X, Y가 주어질때 해당 문자열에서 겹치는 문자를 찾아 가장 큰 문자를 반환해야 한다.
            우선 X와 비교하고 수정하기위해 Y를 변경가능한 변수로 varY로 지정해주고, 결과값을 저장할 result변수를 만든다.
            그런다음 X에 반복문을 실행해 Y에 해당 문자가 있는지 체크하고 겹치는 문자를 result에 더해준 뒤 같은수가 중복되어서 더해지는걸 방지하기 위해 Y에서 발견한 중복문자는 제거해준다.
            그런다음 result가 비어있다면 겹치는 문자가 하나도 없는것이니 -1을 리턴한다.
            이후 resultSet변수를 만들어 문자열을 내림차순으로 정렬해주고, 만약 resultSet의 문자가 0으로 시작한다면 "0"을 리턴한다.
            그런다음 resultSet을 반환해주면 완성.
 
        1.1.3 개인적인 리뷰
            두 문자열을 비교하여 겹치는 부분을 제일 큰수로 리턴해주면 되는, 비교적 간단한 문제이다.
            어차피 X와 Y에 겹치는 문자는 어떤것을 기준으로 비교하든 결과가 같기때문에 X를 기준으로 문제풀이를 했고 Y내의 i를 추가로 찾아서 같은수가 두번이상 추가되지 않게 하는 계산식도 배웠다.
            그다음에 마지막으로 00과 같은 수를 배제해야 하기때문에 이리저리 머리를 굴렸는데, 처음에는 단순히 Set을 이용하여 결과를 도출해내거나 Set문자열을 만들어 문자를 하나하나 검사하면서 중복되는 0이 있는지 체크하는 계산식을 만들었으나
            0이외의 다른수도 중복이 제거 된다거나, 100같은 수가 10으로 줄어드는 경우의 수때문에 철회되었다.
            그런 와중에 문득 내림차순으로 정렬을 하면 자동으로 제일 큰수가 맨앞으로 오게 되는데, 이때 그게 0이라면 제일 큰수는 0이되는것이니 return "0"을 해주는것으로 해결하였다.
            중복처리에 대한 로직의 공부를 좀 더 해야할거같다. 저렇게 단순하게 처리되는 일이 많지않을것이고, 대형프로젝트에서는 중복처리에 대한 복잡할것이기 때문에 중요한 항목이라고 생각한다. 아직 갈길이 멀다.














