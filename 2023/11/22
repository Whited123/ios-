2023 / 11 / 22

오늘 배운 것:

1. 코드 테스트 
    1.1 기사단원의 무기
        1.1.1 코드
            import Foundation

func solution(_ number:Int, _ limit:Int, _ power:Int) -> Int {
    var yakSuStr = [Int]()
    for i in 1...number {
        var middle = 0
        for x in 1...i {
            if i % x == 0 {
                middle += 1 
            }
        }
        yakSuStr.append(middle)
    }
    let yakSuLimit = yakSuStr.map { i in return i > limit ? power : i}
    let answer = yakSuLimit.reduce(0) {result, i in return result + i}
    return answer
}

        1.1.2 문제 리뷰
            입력값으로 정수 세개가 주어지는데, number가 기사의 수이고 limit공격력의 상한, power가 상한을 초과한 기사가 갖게되는 공격력일때, 기사들이 공격력의 총합을 리턴해야 한다.
            우선 약수의 배열을 저장할 변수 yakSuStr을 만들고, 반복문을 사용하여 각 기사들의 숫자에 접근하며 한명의 기사가 갖게되는 약수의 갯수(공격력)을 더해줄 middle변수를 만든다.
            이중반복문을 실행하여 1부터 현재 접근중인 i의 값까지를 x에 대입하여 i % x계산식으로 0이 되는 수를 구하고 middle에 저장한 뒤 만들어둔 빈배열에 middle을 넣어주면 약수구하기 완성.
            상수를 만들어 만들어둔 약수배열에 map함수를 사용하여 limit를 넘어가는 공격력은 power로 조정을 해준다.
            마지막으로 reduce함수를 사용하여 배열의 모든 요소를 더해주면 완성.

        1.1.3 개인적인 리뷰
            단순히 한두개의 계산식을 거쳐 완성하는 함수가 아닌 약수를 만들고, limit에 제한되는 숫자는 power로 바꾸어 줘야 하고, 배열의 모든 숫자를 더해준다음 리턴해줘야하고 그 과정에서 변수나 상수, 함수가 여럿 쓰이기때문에 꽤 높은 난이도의 문제였다.
            이 문제에서 알아야되는건 약수를 구하는 간단한 계산식에대해 이해하고, map함수와 reduce함수가 각각 어떤일을 하는지, 또 안에서 쓰이는 메서드는 어떤 것들이 있고 무슨기능을 하는지이다.
            map함수는 어떤 배열에서 조건에따라 값을 변경하거나 조정하고 싶을때 사용할 수있고, i는 변경 가능한 임의 변수로 각 요소들을 나타낸다.
            reduce는 배열내의 값들을 계산하여 원하는 값을 도출해낼때 사용하고, redece()괄호안의 숫자는 기본값, result는 누적된 값을 나타내는 변수로 자동으로 갱신되며, i는 map과 같이 요소들을 나타낸다.
















